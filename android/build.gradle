plugins {
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments '-DANDROID_ARM_NEON=TRUE'
            }
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(":library")

    implementation "com.ToxicBakery.logging:arbor-jvm:$arbor_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$support_lib_version"


    testImplementation 'junit:junit:4.12'

    androidTestUtil 'com.android.support.test:orchestrator:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

    androidTestImplementation project(':msc_test_core')
}

publishing {
    publications {
        all(MavenPublication) { publication ->
            pom {
                name = POM_NAME
                description = POM_DESCRIPTION
                url = POM_URL
                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                        distribution = POM_LICENCE_DIST
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                        organization = POM_DEVELOPER_ORGANIZATION
                        organizationUrl = POM_DEVELOPER_ORGANIZATION_URL
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url !version.contains("SNAPSHOT") ? getReleaseUrl() : getSnapshotUrl()
            credentials {
                username = getRepoUsername()
                password = getRepoPassword()
            }
        }
    }
}

signing {
    required isCi()
    sign publishing.publications
}
