plugins {
    id 'java-library'
}

//dokka {
//    noStdlibLink = false
//    includeNonPublic = false
//    skipEmptyPackages = true
//    outputFormat = 'html'
//    outputDirectory = "$buildDir/javadoc"
//}
//
//afterEvaluate { project ->
//    task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
//        outputFormat = 'javadoc'
//        outputDirectory = "$buildDir/javadoc"
//        inputs.dir 'src/main/java'
//    }
//
//    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
//        classifier = 'javadoc'
//        from "$buildDir/javadoc"
//    }
//
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.srcDirs
//    }
//
//    artifacts {
//        archives sourcesJar
//        archives javadocJar
//    }
//}
//
//task jacocoUnitTestReport(type: JacocoReport, group: 'verification',
//        dependsOn: ['testDebugUnitTest']) {
//
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//
//    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
//    def mainSrc = "$project.projectDir/src/main/java"
//
//    sourceDirectories = files([mainSrc])
//    classDirectories = files([debugTree])
//    executionData = fileTree(dir: project.buildDir, includes: [
//            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
//    ])
//}
//
//task jacocoFullTestReport(type: JacocoReport, group: 'verification',
//        dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
//
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//
//    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
//    def mainSrc = "$project.projectDir/src/main/java"
//
//    sourceDirectories = files([mainSrc])
//    classDirectories = files([debugTree])
//    executionData = fileTree(dir: project.buildDir, includes: [
//            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
//    ])
//}
//
//task copyAndroidCoverage(type: Copy) {
//    /*afterEvaluate {
//        dependsOn jacocoFullTestReport
//    }*/
//    from 'build/reports/jacoco/jacocoFullTestReport/jacocoFullTestReport.xml'
//    into './'
//    rename { String fileName ->
//        fileName = "integration.xml"
//    }
//}
//
//task prepareForCommit(dependsOn: [copyAndroidCoverage]) {
//
//}
